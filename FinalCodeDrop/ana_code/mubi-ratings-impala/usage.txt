before running these commands, run the python go.py file to set directories for impala

$ impala-shell

connect compute-2-1;

invalidate metadata;

use {NETID};

//create table (replace rs5955 with your NETID)

create external table mubiratings (movie_id int, rating_id int, rating_url string, rating_score float, rating_timestamp string, critic string, critic_likes int, critic_comments int, user_id int, isTrialist boolean, isSubscriber boolean, isEligibleTrial boolean, hasPayment boolean) row format delimited fields terminated by '|' location '/user/rs5955/impalaInput/mubi-ratings/';

//check table

show tables;

describe mubiratings;

select * from mubiratings limit 5;

//check average scores per table entry

select avg(rating_score) from mubiratings; //3.857

select count(*) from mubiratings where istrialist=1; //38830

select count(*) from mubiratings where istrialist=0; //968857

//less trialists than nontrialists

select avg(rating_score) from mubiratings where trialist=1; //3.819

select avg(rating_score) from mubiratings where trialist=0; //3.859

//trialists seem to rate slightly lower than non-trialists

select count(*) from mubiratings where issubscriber=1; //161672

select count(*) from mubiratings where issubscriber=0; //846025

//more non subscribers than subscribers

select avg(rating_score) from mubiratings where issubscriber=1; //3.86855

select avg(rating_score) from mubiratings where issubscriber=0; //3.85553

//subscribers rate higher than nonsubscribers

select count(*) from mubiratings where iseligibletrial=1; //828051

select count(*) from mubiratings where iseligibletrial=0; //179648

//most users are eligible for trial but arent using them

select avg(rating_score) from mubiratings where iseligibletrial=1; //3.85585

select avg(rating_score) from mubiratings where iseligibletrial=0; //3.86575

//similar to subscribers, users who are not eligible for trials (ie. non subscribers), rate movies higher

select count(*) from mubiratings where haspayment=1; //293754

select count(*) from mubiratings where haspayment=0; //713945

//less customers had paid subscriptions when they rated the movie

select avg(rating_score) from mubiratings where haspayment=1; //3.85004

select avg(rating_score) from mubiratings where haspayment=0; //3.86073

//interestingly, paid subscribers rated lower

select avg(rating_score),critic_comments from mubiratings group by critic_comments order by avg(rating_score) desc;

//critics who comment often tend to rate 5s or 2s

select avg(critic_likes), issubscriber from mubiratings where issubscriber is not null group by issubscriber;

//subscribers tend to have more critic likes than non subscribers

select avg(critic_likes), istrialist from mubiratings where istrialist is not null group by istrialist;

//trialists also tend to have more critic likes than non trialists

select avg(critic_likes), iseligibletrial from mubiratings where iseligibletrial is not null group by iseligibletrial;

//eligible trialists have less critic likes

select avg(critic_likes), haspayment from mubiratings where haspayment is not null group by haspayment;

//paid subscribers tend to have more likes
//general 3:1 ratio for paid users vs free users

select avg(critic_comments), issubscriber from mubiratings where issubscriber is not null group by issubscriber;

//subscribers tend to comment more

select avg(critic_comments), istrialist from mubiratings where istrialist is not null group by istrialist;

//trialists tend to comment more

select avg(critic_comments), iseligibletrial from mubiratings where iseligibletrial is not null group by iseligibletrial;

//eligible trialists commented less

select avg(critic_comments), haspayment from mubiratings where haspayment is not null group by haspayment;

//